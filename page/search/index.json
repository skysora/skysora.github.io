[{"content":"製作網頁的起手式-註冊和登入 結果圖 程式連結\n前置作業 下載 下載docker、docker-compose 下載檔案、執行 前往:8888 1 2 3 4 5 git clone https://github.com/skysora/docker-compose-flask-login cd docker-compose-flask-login docker-compose up - 確認資料夾層級 static資料夾放css、js檔案 templates資料夾放html檔案 auth資料夾放登入註冊相關檔案 其他為設定檔案、啟動檔案 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 docker-compose-flask-login/ ├── web/ │ ├── static/ │ │ ├── css/ │ │ │ ├── style.css │ │ │ ├── ... │ │ ├── js/ │ │ │ ├── main.js │ │ │ ├── ... │ ├── templates/ │ │ ├── index.html │ │ ├── login.html │ │ ├── register.html │ │ ├── ... │ ├── auth/ │ │ ├── __init__.py │ │ ├── forms.py │ │ ├── models.py │ │ ├── views.py │ ├── requirements.txt │ ├── gunicorn.conf.py │ ├── config.py │ ├── app.db │ ├── Dockerfile ├── docker-compose.yml └── ... 打包後端服務 使用docker-compose方便一鍵啟動，並且未來若有擴充模組需求會比較方便 以下例子為若未來有需要使用到mysql server docker-compose的寫法，但在本文中不需要db部分所以會註解掉 web 服務需要的套件會寫在./web/Dockerfile中 另外我們使用gunicorn當作部署 Python Web 應用程序的 WSGI HTTP 伺服器，控制檔案寫在./web/gunicorn.conf.py中 docker-compose docker-compose.yml\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 version: \u0026#39;3.0\u0026#39; services: # db: # image: mariadb:10 # container_name: \u0026#39;db\u0026#39; # environment: # - MYSQL_ROOT_PASSWORD=admin # - MYSQL_USER=\u0026#34;root\u0026#34; # - MYSQL_DATABASE:DB # - MYSQL_PASSWORD=admin # ports: # - \u0026#34;5500:3306\u0026#34; # volumes: # - ./sql:/docker-entrypoint-initdb.d # - ./sql:/var/lib/mysql # networks: # - my-network # restart: always app: build: ./web container_name: \u0026#39;web\u0026#39; # depends_on: # - db ports: - 8888:80 volumes: - ./web:/web networks: - my-network restart: always networks: my-network: driver: bridge - Dockerfile ./web/Dockerfile\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 FROM ubuntu:20.04 RUN apt-get update \u0026amp;\u0026amp; apt-get install -y wget apt-transport-https RUN wget https://packages.microsoft.com/config/ubuntu/20.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb RUN dpkg -i packages-microsoft-prod.deb RUN rm packages-microsoft-prod.deb RUN apt-get update RUN apt-get upgrade -y RUN apt-get install python3.8-distutils -y RUN apt-get install python3.8 -y RUN apt-get install wget -y RUN wget https://bootstrap.pypa.io/get-pip.py RUN python3.8 get-pip.py COPY ./requirements.txt /requirements.txt COPY ./packages/flask-login /packages/flask-login RUN pip3 install -r /requirements.txt RUN pip3 install ./packages/flask-login RUN apt install vim -y WORKDIR /web CMD gunicorn app:app -c gunicorn.conf.py - ./web/gunicorn.conf.py\n1 2 3 4 5 6 workers = 5 worker_class = \u0026#34;gevent\u0026#34; bind = \u0026#34;0.0.0.0:80\u0026#34; - Web router 基本設定 登入註冊相關route設定(view.py) ./web/auth/view.py檔案宣告了所有跟登入註冊相關route 我們將相關route依附在auth_blueprint中，在將auth_blueprint註冊到執行app.py中 ./web/auth/view.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 from flask import Blueprint auth_blueprint = Blueprint(\u0026#39;auth\u0026#39;, __name__, template_folder=\u0026#39;templates\u0026#39;) @auth_blueprint.route(\u0026#34;/\u0026#34;) @login_required def init(): ... @auth_blueprint.route(\u0026#39;/login\u0026#39;, methods=[\u0026#39;GET\u0026#39;, \u0026#39;POST\u0026#39;]) def login(): ... @auth_blueprint.route(\u0026#34;/register\u0026#34;,methods=[\u0026#39;GET\u0026#39;,\u0026#39;POST\u0026#39;]) def register(): ... @auth_blueprint.route(\u0026#34;/logout\u0026#34;,methods=[\u0026#39;GET\u0026#39;,\u0026#39;POST\u0026#39;]) def logout(): ... - app.py ./web/app.py\n1 2 3 4 5 6 7 8 9 10 11 from flask import Flask from config import Config from auth.views import auth_blueprint app = Flask(__name__) app.config.from_object(Config) app.register_blueprint(auth_blueprint) if __name__ == \u0026#34;__main__\u0026#34;: app.run() - 創建DataBase 創建儲存使用者資料的DB，在./web/auth/init.py 中宣告，在註冊到app.py中 基本設定寫在Config中 SQLAlchemy DB ./web/auth/init.py\n1 2 3 4 from flask_sqlalchemy import SQLAlchemy db = SQLAlchemy() - Config ./web/config.py\n1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 import os from datetime import timedelta basedir = os.path.abspath(os.path.dirname(__file__)) class BaseConfig: # 基本配置 SECRET_KEY = os.environ.get(\u0026#39;key\u0026#39;) PERMANENT_SESSION_LIFETIME = timedelta(days=14) class Config(BaseConfig): # SECRET_KEY SECRET_KEY = os.environ.get(\u0026#39;SECRET_KEY\u0026#39;) or \u0026#39;A-VERY-LONG-SECTRET-KEY\u0026#39; SQLALCHEMY_DATABASE_URI = os.environ.get(\u0026#39;DATABASE_URL\u0026#39;) or \u0026#39;sqlite:///\u0026#39; + os.path.join(basedir,\u0026#39;app.db\u0026#39;) SQLALCHEMY_TRACK_MODIFICATIONS= False - Model 創建使用者資訊到./web/auth/models.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from . import db class User(db.Model): id = db.Column(db.Integer, primary_key=True) username = db.Column(db.String(20), unique=True, nullable=False) email = db.Column(db.String(120), unique=True,nullable=False) password = db.Column(db.String(20), unique=True, nullable=False) def __repr__(self): return \u0026#39;\u0026lt;User %r\u0026gt;\u0026#39; % self.username - 創建DB指令 在app.py中創建(db.create_all())，注意這裡創建完後要註解。 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from flask import Flask from config import Config from auth.views import auth_blueprint app = Flask(__name__) app.config.from_object(Config) app.register_blueprint(auth_blueprint) # init create db with app.app_context(): db.create_all() if __name__ == \u0026#34;__main__\u0026#34;: app.run() - 註冊 註冊表單 創建需要表格到./web/auth/form.py ./web/auth/form.py包含欄位名稱以及驗證 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class RegisterForm(FlaskForm): username = StringField(\u0026#39;Username\u0026#39;,validators = [DataRequired(),Length(min=3,max=20)]) email = StringField(\u0026#39;Email\u0026#39;,validators = [DataRequired(),Email()]) password = PasswordField(\u0026#39;Password\u0026#39;,validators=[DataRequired(),Length(min=8,max=20)]) confirm = PasswordField(\u0026#39;Repeat Password\u0026#39;,validators=[DataRequired(),EqualTo(\u0026#39;password\u0026#39;)]) def validate_username(self,username): user = User.query.filter_by(username=username.data).first() if user: raise ValidationError(\u0026#34;Username already taken,please chosse anthor username\u0026#34;) def validate_email(self,email): user = User.query.filter_by(email=email.data).first() if user: raise ValidationError(\u0026#34;Email already taken,please chosse anthor username\u0026#34;) - 前端對應表單 前端html要對應 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 \u0026lt;form method=\u0026#34;POST\u0026#34; action=\u0026#34;{{ url_for(\u0026#39;auth.register\u0026#39;) }}\u0026#34;\u0026gt; {{ form.hidden_tag() }} \u0026lt;!-- 隱藏的 CSRF 欄位 --\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; {{ form.username.label(class=\u0026#34;form-control-label\u0026#34;) }} {{ form.username(class=\u0026#34;form-control\u0026#34;) }} {% for error in form.username.errors %} \u0026lt;span class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/span\u0026gt; {% endfor %} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; {{ form.email.label(class=\u0026#34;form-control-label\u0026#34;) }} {{ form.email(class=\u0026#34;form-control\u0026#34;) }} {% for error in form.email.errors %} \u0026lt;span class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/span\u0026gt; {% endfor %} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; {{ form.password.label(class=\u0026#34;form-control-label\u0026#34;) }} {{ form.password(class=\u0026#34;form-control\u0026#34;) }} {% for error in form.password.errors %} \u0026lt;span class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/span\u0026gt; {% endfor %} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; {{ form.confirm.label(class=\u0026#34;form-control-label\u0026#34;) }} {{ form.confirm(class=\u0026#34;form-control\u0026#34;) }} {% for error in form.confirm.errors %} \u0026lt;span class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/span\u0026gt; {% endfor %} \u0026lt;/div\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Register\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; - 後端接收資料處理 flask後端，./web/auth/view.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 @auth_blueprint.route(\u0026#34;/register\u0026#34;,methods=[\u0026#39;GET\u0026#39;,\u0026#39;POST\u0026#39;]) def register(): if current_user.is_authenticated: return redirect(url_for(\u0026#39;view.azure\u0026#39;)) form = RegisterForm() if form.validate_on_submit(): username = form.username.data email = form.email.data password = bctrypt.generate_password_hash(form.password.data) user = User(username=username,password=password,email=email) db.session.add(user) db.session.commit() flash(\u0026#34;Congrates registeration success\u0026#34;,category=\u0026#34;success\u0026#34;) return redirect(url_for(\u0026#39;auth.login\u0026#39;)) return render_template(\u0026#39;register.html\u0026#39;,form=form) - 登入 註冊表單 創建需要表格到./web/auth/form.py ./web/auth/form.py包含欄位名稱 1 2 3 4 5 6 7 class LoginForm(FlaskForm): username = StringField(\u0026#39;Username\u0026#39;,validators = [DataRequired(),Length(min=3,max=20)]) password = PasswordField(\u0026#39;Password\u0026#39;,validators=[DataRequired(),Length(min=8,max=20)]) remember = BooleanField(\u0026#39;Remember\u0026#39;, default=True) - 前端對應表單 前端html要對應 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 \u0026lt;form method=\u0026#34;POST\u0026#34; action=\u0026#34;{{ url_for(\u0026#39;auth.login\u0026#39;) }}\u0026#34;\u0026gt; {{ form.hidden_tag() }} \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;username\u0026#34;\u0026gt;Username\u0026lt;/label\u0026gt; {{ form.username(class=\u0026#34;form-control\u0026#34;, placeholder=\u0026#34;Enter your username\u0026#34;) }} {% for error in form.username.errors %} \u0026lt;span class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/span\u0026gt; {% endfor %} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-group\u0026#34;\u0026gt; \u0026lt;label for=\u0026#34;password\u0026#34;\u0026gt;Password\u0026lt;/label\u0026gt; {{ form.password(class=\u0026#34;form-control\u0026#34;, placeholder=\u0026#34;Enter your password\u0026#34;) }} {% for error in form.password.errors %} \u0026lt;span class=\u0026#34;text-danger\u0026#34;\u0026gt;{{ error }}\u0026lt;/span\u0026gt; {% endfor %} \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;form-check\u0026#34;\u0026gt; {{ form.remember(class=\u0026#34;form-check-input\u0026#34;) }} \u0026lt;label class=\u0026#34;form-check-label\u0026#34; for=\u0026#34;remember\u0026#34;\u0026gt;Remember me\u0026lt;/label\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;button type=\u0026#34;submit\u0026#34; class=\u0026#34;btn btn-primary\u0026#34;\u0026gt;Login\u0026lt;/button\u0026gt; \u0026lt;/form\u0026gt; - 後端接收資料處理 flask後端，./web/auth/view.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 @auth_blueprint.route(\u0026#39;/login\u0026#39;, methods=[\u0026#39;GET\u0026#39;, \u0026#39;POST\u0026#39;]) def login(): if current_user.is_authenticated: return redirect(url_for(\u0026#39;view.azure\u0026#39;)) form = LoginForm() if form.validate_on_submit(): username = form.username.data password = form.password.data remember = form.remember.data user = User.query.filter_by(username=username).first() if user and bctrypt.check_password_hash(user.password,password): # User exists and password matched login_user(user,remember=remember) flash(\u0026#39;Login success\u0026#39;,category=\u0026#34;info\u0026#34;) return redirect(url_for(\u0026#39;auth.init\u0026#39;)) flash(\u0026#39;User not exists or password not match\u0026#39;,category=\u0026#39;danger\u0026#39;) return render_template(\u0026#39;sign-in.html\u0026#39;,form=form) - 登出 ./web/auth/view.py，建立登出 1 2 3 4 5 6 7 @auth_blueprint.route(\u0026#34;/logout\u0026#34;,methods=[\u0026#39;GET\u0026#39;,\u0026#39;POST\u0026#39;]) def logout(): logout_user() flash(\u0026#39;Logged out successfully\u0026#39;, category=\u0026#39;info\u0026#39;) return redirect(url_for(\u0026#39;auth.init\u0026#39;)) - ","date":"2023-10-17T09:42:42+08:00","image":"http://skysora.github.io/post/7/header_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"http://skysora.github.io/post/7/","title":"[Flask]利用docker-compose一鍵啟動網頁服務，製作網頁的起手式-註冊和登入"},{"content":"利用OpenCV計算食物份量(簡單版) 結果圖 流程 讀圖 1 2 3 4 string path = \u0026#34;Resources/12779.jpg\u0026#34;; Mat img = imread(path); - 將圖片模糊化(GaussianBlur) 1 2 3 4 5 // Preprocessing cvtColor(img, imgGray,COLOR_BGR2GRAY); GaussianBlur(img, imgBlur, Size(11,11), 3,0); - 利用Canny演算法找邊緣 1 2 3 Canny(imgBlur, imgCanny, 50, 100); - 填補空洞(Dilate) 1 2 3 4 Mat kernel = getStructuringElement(MORPH_RECT, Size(3,3)); dilate(imgCanny, imgDil, kernel); - 找邊緣點(findContours)-\u0026gt;計算面積 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 //得到輪廓 void getContours(Mat imgDil , Mat img){ vector\u0026lt;vector\u0026lt;Point\u0026gt;\u0026gt; contours; vector\u0026lt;Vec4i\u0026gt; hierarchy; //找輪廓點 findContours(imgDil,contours,hierarchy,RETR_EXTERNAL,CHAIN_APPROX_SIMPLE); string objectType; for (int i = 0; i\u0026lt;contours.size();i++){ int area = contourArea(contours[i]); vector\u0026lt;vector\u0026lt;Point\u0026gt;\u0026gt; conPoly(contours.size()); vector\u0026lt;Rect\u0026gt; boundRect(contours.size()); if(area\u0026gt;1000){ // arcLength 函數通常用於計算輪廓的周長或曲線的長度。第二個參數 true 表示該輪廓是封閉的 float peri = arcLength(contours[i], true); // 這一行code使用多邊形逼近方法對輪廓進行逼近;0.0001*peri：逼近的精度參數，它是相對於輪廓周長的百分比。輪廓周長的2%用於確定逼近的精度。這個值越小，逼近的多邊形就越接近原始輪廓。 approxPolyDP(contours[i], conPoly[i], 0.0001*peri, true); drawContours(img, conPoly, i, Scalar(255,0,255),2); // 畫正方形方匡 boundRect[i] = boundingRect(conPoly[i]); rectangle(img, boundRect[i].tl(), boundRect[i].br(),Scalar(0,255,0),1); } } } - Total Code 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 Mat imgGray,imgBlur,imgCanny,imgDil,imgErode; //得到輪廓 void getContours(Mat imgDil , Mat img){ vector\u0026lt;vector\u0026lt;Point\u0026gt;\u0026gt; contours; vector\u0026lt;Vec4i\u0026gt; hierarchy; //找輪廓點 findContours(imgDil,contours,hierarchy,RETR_EXTERNAL,CHAIN_APPROX_SIMPLE); string objectType; for (int i = 0; i\u0026lt;contours.size();i++){ int area = contourArea(contours[i]); vector\u0026lt;vector\u0026lt;Point\u0026gt;\u0026gt; conPoly(contours.size()); vector\u0026lt;Rect\u0026gt; boundRect(contours.size()); if(area\u0026gt;1000){ // arcLength 函數通常用於計算輪廓的周長或曲線的長度。第二個參數 true 表示該輪廓是封閉的 float peri = arcLength(contours[i], true); // 這一行code使用多邊形逼近方法對輪廓進行逼近;0.0001*peri：逼近的精度參數，它是相對於輪廓周長的百分比。輪廓周長的2%用於確定逼近的精度。這個值越小，逼近的多邊形就越接近原始輪廓。 approxPolyDP(contours[i], conPoly[i], 0.0001*peri, true); drawContours(img, conPoly, i, Scalar(255,0,255),2); // 畫正方形方匡 boundRect[i] = boundingRect(conPoly[i]); rectangle(img, boundRect[i].tl(), boundRect[i].br(),Scalar(0,255,0),1); } } } int main() { string path = \u0026#34;Resources/12779.jpg\u0026#34;; Mat img = imread(path); // Preprocessing cvtColor(img, imgGray,COLOR_BGR2GRAY); GaussianBlur(img, imgBlur, Size(11,11), 3,0); Canny(imgBlur, imgCanny, 50, 100); Mat kernel = getStructuringElement(MORPH_RECT, Size(3,3)); dilate(imgCanny, imgDil, kernel); getContours(imgDil,img); imshow(\u0026#34;Image\u0026#34;, img); waitKey(0); return 0; } - 取得份量 得到面積後，使用swift ARKit技術可以得到相機到桌面距離(到平面距離)，依照公式求得物件體積。 影片解說 詳細說明可以看以下影片，但其中物件偵測是使用Yolo模型判定。 ","date":"2023-10-09T21:18:23+08:00","image":"http://skysora.github.io/post/6/header_hudd2e8259c20ed0dcaa856c253552e90f_14625_120x120_fill_q75_box_smart1.jpg","permalink":"http://skysora.github.io/post/6/","title":"利用OpenCV計算食物份量(簡單版)"},{"content":"利用Canva製作旅遊手冊 模板連結\n結果圖(更多請至模板連結看) 開頭 第一頁顯示每一天的重要斷點位置 內容 票卷QRCode可以貼好，方便換車票 相關景點的Blog利用QRcode產生器產生QRcode 若有預約餐廳或者住宿，事先準備好導航QRcode，不用現場查詢，若旅伴失散也能各自找到地點 每個景點的描述、去的方法都可以詳細紀錄 ","date":"2023-10-08T00:00:00Z","image":"http://skysora.github.io/post/5/header_hubce42636ecacc1a380b462f3110efcec_37455_120x120_fill_q75_box_smart1.jpg","permalink":"http://skysora.github.io/post/5/","title":"利用Canva製作旅遊手冊(提供模板)"},{"content":"結果 架構 建置步驟 下載需要的檔案，並啟動 1 2 3 4 git clone https://github.com/skysora/multi-server-resource-management.git cd multi-server-resource-management docker-compose up -d 建立DataScoure meau-\u0026gt;Connections-\u0026gt;Data sources-\u0026gt;Add new data source-\u0026gt;prometheus 在Prometheus server URL，輸入\u0026lt;你的url\u0026gt;:9090 Save \u0026amp; test 若有多台主機要重複此步驟，並且每台主機都要經過第一步驟。 建立Dashboard 可依照喜好和使用的模組到https://grafana.com/grafana/dashboards/選擇喜歡的dashboards 本教學使用三個模組分別為node_exporter、cadvisor、nvidia_gpu_exporter node_exporter蒐集server基本資源，Ex：CPU、Memory、Network。參考模板：https://grafana.com/grafana/dashboards/1860-node-exporter-full/ cadvisor 蒐集 docker容器內資源用量。參考模板：https://grafana.com/grafana/dashboards/14282-cadvisor-exporter/ nvidia_gpu_exporter蒐集server GPU使用量。參考模板：https://grafana.com/grafana/dashboards/14574-nvidia-gpu-metrics/ 進入模板頁面copy dashboard ID Meau-\u0026gt;Dashboards-\u0026gt;New-\u0026gt;Import 將ID 放入UID中，點選Load(Load之後會顯示另外一個ID) Prometheus(DataScoure)選擇資料來源 點擊Import 依照步驟2完成所有監控設定 ","date":"2023-09-28T15:02:14+08:00","image":"http://skysora.github.io/post/4/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"http://skysora.github.io/post/4/","title":"Multi-server Resource Management"},{"content":" 結論 功能 Azure GCP AWS Vocol 服務名稱 Speech Cloud Speech-to-Text API Amazon Transcribe vovol.ai GUI介面 X O O O 輸出多元度 高 普 普 低 切割單位 整段、句子 句子、字 整段、詞 說話者 調整設定 無 普 最多 少 Azure 優點：回傳的比較詳細 缺點：沒有GUI介面，要自己刻 可以簡單利用API串接的方式達到即時麥克風輸入、語音上傳的功能，但是如果要進行較大檔案的上傳，利用官方網站提供的Sample code無法執行，要另外自行串接 輸出格式：大致如下，combinedRecognizedPhrases為辨識出的每個句子組合的文章，recognizedPhrases則包含每個辨識出來的句子詳細資料。 1 2 3 4 5 6 7 8 9 { \u0026#34;source\u0026#34;:\u0026#34;https://ntuststorage1.blob.core.windows.net/test/1.wav\u0026#34;, \u0026#34;timestamp\u0026#34;:\u0026#34;2023-09-18T14:06:32Z\u0026#34;, \u0026#34;durationInTicks\u0026#34;:6875900000, \u0026#34;duration\u0026#34;:\u0026#34;PT11M27.59S\u0026#34;, \u0026#34;combinedRecognizedPhrases\u0026#34;:[...], \u0026#34;recognizedPhrases\u0026#34;[...], } Property Description Lexical The lexical form of the recognized text: the actual words recognized. ITN The inverse-text-normalized (ITN) or canonical form of the recognized text, with phone numbers, numbers, abbreviations (\u0026ldquo;doctor smith\u0026rdquo; to \u0026ldquo;dr smith\u0026rdquo;), and other transformations applied. MaskedITN The ITN form with profanity masking applied, if requested. Display The display form of the recognized text, with punctuation and capitalization added. This parameter is the same as what DisplayText provides when the format is set to simple. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u0026#34;combinedRecognizedPhrases\u0026#34;:[ { \u0026#34;channel\u0026#34;:0, \u0026#34;lexical\u0026#34;:\u0026#34;台 湾 民 主 国 的 抗 日 这 是 什 么 呢 蓝 色 的 底 色 黄 色 的 老 虎 蓝 地 黄 虎 旗 是 什 么 国 家 的 旗 帜 台 湾 民 主 国 台 湾 民 主 国 蓝 地 黄 虎 旗 与 清 朝 黄 龙 起 有 何 不 同 呢 颜 色 相 反 龙 虎 相 斗 还 是 龙 兄 虎 弟 台 湾 民 主 国 什 么 时 候 成 立 的 呢 目 的 是 什 么 总 统 是 谁 结 果 又 如 何 呢 西 元 一 八 九 四 年 中 国 清 廷 与 日 本 因 为 朝 鲜 问 题 爆 发 什 么 战 争 西 元 一 八 九 四 年 清 光 绪 二 十 年 中 国 清 廷 与 日 本 \u0026#34;, \u0026#34;itn\u0026#34;:\u0026#34;台 湾 民 主 国 的 抗 日 这 是 什 么 呢 蓝 色 的 底 色 黄 色 的 老 虎 蓝 地 黄 虎 旗 是 什 么 国 家 的 旗 帜 台 湾 民 主 国 台 湾 民 主 国 蓝 地 黄 虎 旗 与 清 朝 黄 龙 起 有 何 不 同 呢 颜 色 相 反 龙 虎 相 斗 还 是 龙 兄 虎 弟 台 湾 民 主 国 什 么 时 候 成 立 的 呢 目 的 是 什 么 总 统 是 谁 结 果 又 如 何 呢 西 元 1894年 中 国 清 廷 与 日 本 因 为 朝 鲜 问 题 爆 发 什 么 战 争 西 元 1894年 清 光 绪 二十 年 中 国 清 廷 与 日 本 因 为 朝 鲜 问 题 爆 发 甲 午\u0026#34;, \u0026#34;maskedITN\u0026#34;:\u0026#34;台湾民主国的抗日这是什么呢蓝色的底色黄色的老虎蓝地黄虎旗是什么国家的旗帜台湾民主国台湾民主国蓝地黄虎旗 关甲午战争西元1895年6月日军进入哪里就宣布开始统治台湾 台北\u0026#34;, \u0026#34;display\u0026#34;:\u0026#34;台湾民主国的抗日，这是什么呢？蓝色的底色，黄色的老虎蓝地黄虎旗是什么国家的旗帜？台湾民主国台湾民主国蓝地黄虎旗。 与清朝黄龙起有何不同呢？颜色相反，龙虎相斗，还是龙兄虎弟，台湾民主国什么时候成立的呢？目的是什么？总统是谁？结果又如何呢？ 西元1894年，中国清廷与日本因为朝鲜问题爆发什么战争？西元1894年清光绪二十年，中国清廷与日本因为朝鲜问题爆发甲午战争，中国的海战陆战都。 都失败，所以清廷派李鸿章到日本求和在下关也就是马关的谈判当\u0026#34; }, { \u0026#34;channel\u0026#34;:1, \u0026#34;lexical\u0026#34;:\u0026#34;台 湾 民 主 国 的 抗 日 这 是 什 么 呢 蓝 色 的 底 色 黄 色 的 老 虎 蓝 地 黄 虎 旗 是 什 么 国 家 的 旗 帜 台 湾 民 主 国 台 湾 民 主 国 蓝 地 黄 虎 旗 与 清 朝 黄 龙 起 有 何 不 同 呢 颜 色 相 反 龙 虎 相 斗 还 是 龙 生 虎 地 台 湾 民 主 国 什 么 时 候 成 立 的 呢 目...\u0026#34;, \u0026#34;itn\u0026#34;:\u0026#34;台 湾 民 主 国 的 抗 日 这 是 什 么 呢 蓝 色 的 底 色 黄 色 的 老 虎 蓝 地 黄 虎 旗 是...\u0026#34;, \u0026#34;maskedITN\u0026#34;:\u0026#34;台湾民主国的抗日这是什么呢...\u0026#34;, \u0026#34;display\u0026#34;:\u0026#34;台湾民主国的抗日，...\u0026#34; } ], 這裡是回傳5-best Property Description Confidence The confidence score of the entry, from 0.0 (no confidence) to 1.0 (full confidence). 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 \u0026#34;recognizedPhrases\u0026#34;:[ { \u0026#34;recognitionStatus\u0026#34;:\u0026#34;Success\u0026#34;, \u0026#34;channel\u0026#34;:0, \u0026#34;offset\u0026#34;:\u0026#34;PT0.64S\u0026#34;, \u0026#34;duration\u0026#34;:\u0026#34;PT28.04S\u0026#34;, \u0026#34;offsetInTicks\u0026#34;:6400000.0, \u0026#34;durationInTicks\u0026#34;:280400000.0, \u0026#34;nBest\u0026#34;:[ { \u0026#34;confidence\u0026#34;:0.8839353, \u0026#34;lexical\u0026#34;:\u0026#34;台 湾 民 主 国 的 抗 日 这 是 什 么 呢 蓝 色 的 底 色 黄 色 的 老 虎 蓝 地 黄 虎 旗 是 什 么 国 家 的 旗 帜 台 湾 民 主 国 台 湾 民 主 国 蓝 地 黄 虎 旗\u0026#34;, \u0026#34;itn\u0026#34;:\u0026#34;台 湾 民 主 国 的 抗 日 这 是 什 么 呢 蓝 色 的 底 色 黄 色 的 老 虎 蓝 地 黄 虎 旗 是 什 么 国 家 的 旗 帜 台 湾 民 主 国 台 湾 民 主 国 蓝 地 黄 虎 旗\u0026#34;, \u0026#34;maskedITN\u0026#34;:\u0026#34;台湾民主国的抗日这是什么呢蓝色的底色黄色的老虎蓝地黄虎旗是什么国家的旗帜台湾民主国台湾民主国蓝地黄虎旗\u0026#34;, \u0026#34;display\u0026#34;:\u0026#34;台湾民主国的抗日，这是什么呢？蓝色的底色，黄色的老虎蓝地黄虎旗是什么国家的旗帜？台湾民主国台湾民主国蓝地黄虎旗。\u0026#34; }, { \u0026#34;confidence\u0026#34;:0.8823599, \u0026#34;lexical\u0026#34;:\u0026#34;台湾民主国的抗日这是什么呢蓝色的底色黄色的老虎蓝帝黄虎旗是什么国家的旗帜台湾民主国台湾民主国蓝帝黄虎旗\u0026#34;, \u0026#34;itn\u0026#34;:\u0026#34;台湾民主国的抗日这是什么呢蓝色的底色黄色的老虎蓝帝黄虎旗是什么国家的旗帜台湾民主国台湾民主国蓝帝黄虎旗\u0026#34;, \u0026#34;maskedITN\u0026#34;:\u0026#34;台湾民主国的抗日这是什么呢蓝色的底色黄色的老虎蓝帝黄虎旗是什么国家的旗帜台湾民主国台湾民主国蓝帝黄虎旗\u0026#34;, \u0026#34;display\u0026#34;:\u0026#34;台湾民主国的抗日这是什么呢蓝色的底色黄色的老虎蓝帝黄虎旗是什么国家的旗帜台湾民主国台湾民主国蓝帝黄虎旗\u0026#34; } ] }, { \u0026#34;recognitionStatus\u0026#34;:\u0026#34;Success\u0026#34;, \u0026#34;channel\u0026#34;:0, \u0026#34;offset\u0026#34;:\u0026#34;PT29.52S\u0026#34;, \u0026#34;duration\u0026#34;:\u0026#34;PT29.2S\u0026#34;, \u0026#34;offsetInTicks\u0026#34;:295200000.0, \u0026#34;durationInTicks\u0026#34;:292000000.0, \u0026#34;nBest\u0026#34;:[ { \u0026#34;confidence\u0026#34;:0.8856299, \u0026#34;lexical\u0026#34;:\u0026#34;与 清 朝 黄 龙 起 有 何 不 同 呢 颜 色 相 反 龙 虎 相 斗 还 是 龙 兄 虎 弟 台 湾 民 主 国 什 么 时 候 成 立 的 呢 目 的 是 什 么 总 统 是 谁 结 果 又 如 何 呢\u0026#34;, \u0026#34;itn\u0026#34;:\u0026#34;与 清 朝 黄 龙 起 有 何 不 同 呢 颜 色 相 反 龙 虎 相 斗 还 是 龙 兄 虎 弟 台 湾 民 主 国 什 么 时 候 成 立 的 呢 目 的 是 什 么 总 统 是 谁 结 果 又 如 何 呢\u0026#34;, \u0026#34;maskedITN\u0026#34;:\u0026#34;与清朝黄龙起有何不同呢颜色相反龙虎相斗还是龙兄虎弟台湾民主国什么时候成立的呢目的是什么总统是谁结果又如何呢\u0026#34;, \u0026#34;display\u0026#34;:\u0026#34;与清朝黄龙起有何不同呢？颜色相反，龙虎相斗，还是龙兄虎弟，台湾民主国什么时候成立的呢？目的是什么？总统是谁？结果又如何呢？\u0026#34; }, { \u0026#34;confidence\u0026#34;:0.8887188, \u0026#34;lexical\u0026#34;:\u0026#34;与清朝黄龙起有何不同呢颜色相反龙虎相斗还是龙生虎地台湾民主国什么时候成立的呢目的是什么总统是谁结果又如何呢\u0026#34;, \u0026#34;itn\u0026#34;:\u0026#34;与清朝黄龙起有何不同呢颜色相反龙虎相斗还是龙生虎地台湾民主国什么时候成立的呢目的是什么总统是谁结果又如何呢\u0026#34;, \u0026#34;maskedITN\u0026#34;:\u0026#34;与清朝黄龙起有何不同呢颜色相反龙虎相斗还是龙生虎地台湾民主国什么时候成立的呢目的是什么总统是谁结果又如何呢\u0026#34;, \u0026#34;display\u0026#34;:\u0026#34;与清朝黄龙起有何不同呢颜色相反龙虎相斗还是龙生虎地台湾民主国什么时候成立的呢目的是什么总统是谁结果又如何呢\u0026#34; }, ] }, ] GCP 優點：有GUI可以對每個設定做調整，如果沒有要接API比較方便 缺點：輸出feature比較少 輸出格式：會自行判斷斷點，以alternatives做區隔 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 \u0026#34;results\u0026#34;:[ { \u0026#34;alternatives\u0026#34;:[ { \u0026#34;transcript\u0026#34;:\u0026#34; 台 灣 民 主 國 的 抗 議 , 這 是 什 麼 呢 ? 藍 色 的 底 色 , 黃 色 的 老 虎 , 藍 弟 皇 虎 旗 是 什 麼 國 家 的 期 制 ? 台 灣 民 主 國 , 台 灣 民 主 國 南 地 荒 虎 起 , 與 ,\u0026#34;, \u0026#34;words\u0026#34;:[ { \u0026#34;word\u0026#34;:\u0026#34;台\u0026#34; }, { \u0026#34;word\u0026#34;:\u0026#34;灣\u0026#34; }, ... ] } ], \u0026#34;channelTag\u0026#34;:1, \u0026#34;languageCode\u0026#34;:\u0026#34;zh-TW\u0026#34; }, { \u0026#34;alternatives\u0026#34;:[ { \u0026#34;transcript\u0026#34;:清 草 黃 龍 起 , 有 何 不 同 呢 ? 顏 色 相 反 。 龍 虎 相 鬥 , 還 是 龍 松 虎 地 ? 台 灣 民 主 國 , 什 麼 時 候 成 立 的 呢 ? 目 的 是 什 麼 ? 總 統 是 誰 ? 結 果 又 如 何 呢 ?\u0026#34;, \u0026#34;words\u0026#34;:[ { \u0026#34;word\u0026#34;:\u0026#34;清\u0026#34; }, { \u0026#34;word\u0026#34;:\u0026#34;草\u0026#34; }, ... ] } ], \u0026#34;channelTag\u0026#34;:1, \u0026#34;languageCode\u0026#34;:\u0026#34;zh-TW\u0026#34; }, ] AWS 優點：有GUI可以對每個設定做調整，如果沒有要接API比較方便 缺點：輸出feature比較少 輸出格式：會自行判斷\u0026quot;詞\u0026quot;，給予信心程度、開始結束時間 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 { \u0026#34;jobName\u0026#34;:\u0026#34;2\u0026#34;, \u0026#34;accountId\u0026#34;:\u0026#34;794015217967\u0026#34;, \u0026#34;results\u0026#34;:{ \u0026#34;transcripts\u0026#34;:[ { \u0026#34;transcript\u0026#34;:\u0026#34;臺灣民主國的抗日，這是什麼呢？藍色的底色，黃色的老虎男的黃呼氣是什麼國家的體製臺灣民主國臺灣民主國藍的歡呼，其與清朝黃隆起有何不衕呢？顏色相反龍虎相鬥還是隆胸唬的臺灣民主國什麼時候成立的呢？目的是什麼？總統是誰，結果又如何呢？西元一八九四年中國清廷與日本因為朝鮮問題爆發什麼戰爭？西元一八九四年清光緒二十年中國青年與日本因為朝鮮問題爆髮甲午戰爭，中國的海戰、陸戰都失敗，所以輕盈派的紅妝到日本求和再下官也就是馬觀的談判噹中。日方代錶伊籐薄為予取予求，李鴻章沒有太多討價還價的餘地簽訂了割地賠款的馬關條約日本穫利豐富。...\u0026#34; } ], \u0026#34;items\u0026#34;:[ { \u0026#34;start_time\u0026#34;:\u0026#34;0.65\u0026#34;, \u0026#34;end_time\u0026#34;:\u0026#34;1.05\u0026#34;, \u0026#34;alternatives\u0026#34;:[ { \u0026#34;confidence\u0026#34;:\u0026#34;0.9259\u0026#34;, \u0026#34;content\u0026#34;:\u0026#34;臺\u0026#34; } ], \u0026#34;type\u0026#34;:\u0026#34;pronunciation\u0026#34; }, { \u0026#34;start_time\u0026#34;:\u0026#34;1.05\u0026#34;, \u0026#34;end_time\u0026#34;:\u0026#34;1.42\u0026#34;, \u0026#34;alternatives\u0026#34;:[ { \u0026#34;confidence\u0026#34;:\u0026#34;0.9472\u0026#34;, \u0026#34;content\u0026#34;:\u0026#34;灣\u0026#34; } ], \u0026#34;type\u0026#34;:\u0026#34;pronunciation\u0026#34; }, { \u0026#34;start_time\u0026#34;:\u0026#34;1.42\u0026#34;, \u0026#34;end_time\u0026#34;:\u0026#34;2.02\u0026#34;, \u0026#34;alternatives\u0026#34;:[ { \u0026#34;confidence\u0026#34;:\u0026#34;0.989\u0026#34;, \u0026#34;content\u0026#34;:\u0026#34;民主\u0026#34; } ], \u0026#34;type\u0026#34;:\u0026#34;pronunciation\u0026#34; }, { \u0026#34;start_time\u0026#34;:\u0026#34;2.02\u0026#34;, \u0026#34;end_time\u0026#34;:\u0026#34;2.4\u0026#34;, \u0026#34;alternatives\u0026#34;:[ { \u0026#34;confidence\u0026#34;:\u0026#34;0.5566\u0026#34;, \u0026#34;content\u0026#34;:\u0026#34;國的\u0026#34; } ], \u0026#34;type\u0026#34;:\u0026#34;pronunciation\u0026#34; },... ] }, \u0026#34;status\u0026#34;:\u0026#34;COMPLETED\u0026#34; } Vocol 優點：GUI完整。 缺點：可調整設定很少、沒有API可供使用 輸出格式：以句子做斷點。 1 2 3 4 5 6 7 8 9 10 speaker1: 臺灣民主國的抗日。這... speaker2: 日軍攻佔澎湖。這... speaker1: 西元1895年已未年。5月29日，日軍由北百川功能九親王... speaker2: 中國。清朝統治臺灣。有多少年呢?... speaker1: 臺灣民主國雖然號稱民主，但它是否是一個民主國家呢?不是的... ","date":"2023-09-24T14:21:33+08:00","image":"http://skysora.github.io/post/3/1_hudd2e8259c20ed0dcaa856c253552e90f_14625_120x120_fill_q75_box_smart1.jpg","permalink":"http://skysora.github.io/post/3/","title":"比較各大SpeechRecognizer服務"},{"content":" Batch Normalization 和一般 Normalization 差別 Google 於 2015 年提出了 Batch Normalization 的方法，和輸入數據先做 feature scaling 再進行網路訓練的方法類似。在輸入數據時，通常都會先將 feature 做 normalize 後再進行訓練，可以加速模型收斂；而 Batch Normalization 就是指在每一層輸入都做一次 normalize\nBatch Normalization 的作法就是對每一個 mini-batch 都進行正規化到平均值為0、標準差為1的常態分佈，如此一來可以將分散的數據統一，有助於減緩梯度消失以及解決 Internal Covariate Shift 的問題，同時可以加速收斂，並且有正則化的效果 (可以不使用Dropout)\n多的請參考：https://medium.com/ching-i/batch-normalization-%E4%BB%8B%E7%B4%B9-135a24928f12\nBatchNormalization与LayerNormalization的區別 Batch Normalization 的處理對像是對一批樣本， Layer Normalization 的處理對像是單一樣本。 Batch Normalization 是對這批樣本的同一維度特徵做歸一化， Layer Normalization 是對這單一樣本的所有維度特徵做歸一化。 Optimizer 在影像上和NLP上使用的差別 https://medium.com/programming-with-data/34-%E8%AA%BF%E5%8F%83%E7%89%88bert%E6%87%89%E7%94%A8%E7%AF%84%E4%BE%8B-328f56308e64 selfAttention 為什麼要除一個Scale https://zhuanlan.zhihu.com/p/503321685 Activation function https://medium.com/%E6%B7%B1%E6%80%9D%E5%BF%83%E6%80%9D/ml08-activation-function-%E6%98%AF%E4%BB%80%E9%BA%BC-15ec78fa1ce4 影像 segmentation https://medium.com/ching-i/%E5%BD%B1%E5%83%8F%E5%88%86%E5%89%B2-image-segmentation-%E8%AA%9E%E7%BE%A9%E5%88%86%E5%89%B2-semantic-segmentation-1-53a1dde9ed92 梯度消失梯度爆炸 https://zhuanlan.zhihu.com/p/33006526 梯度消失梯度不只在RNN會發生 https://ithelp.ithome.com.tw/m/articles/10280019 LayerNormalization 通常放在哪裡 為什麼 https://hackmd.io/@CZ-Chuang/BJ39oZnvD ","date":"2023-09-22T00:00:00Z","image":"http://skysora.github.io/post/2/2_hubce42636ecacc1a380b462f3110efcec_37455_120x120_fill_q75_box_smart1.jpg","permalink":"http://skysora.github.io/post/2/","title":"機器學習面試題目"},{"content":"利用Hugo建置靜態網頁放置在Github server上 結果圖 事前軟體安裝 Git Hugo 開始 在Github上創立兩個Repositories 兩個Repositories分別代表\n[YourwebName] : 放置Hugo code [GithubUserName].github.io: 放置Hugo產生出來的靜態網頁 將兩個Repositories clone 下來並初始化hugo folder 1 2 3 4 5 git clone https://github.com/skysora/myweb.git cd myweb hugo new site [yourNeedName] git clone https://github.com/skysora/skysora.github.io.git 將想要的模板git clone 到 /themes目錄下 可以去官方網站挑模板\n1 2 3 4 cd themes git clone https://github.com/CaiJimmy/hugo-theme-stack-starter 注意，若要載hugo-theme-stack-starter模組要另外載mod 1 2 3 4 hugo mod get -u github.com/CaiJimmy/hugo-theme-stack/v3 hugo mod tidy 將hugo.toml 設定檔案做修正 修正baseURL 為你的github網址(baseURL) 將theme修正為你clone模板名稱(theme) import 模組 產生靜態網頁 先將[GithubUserName].github.io Repositories clone 進[yourNeedName] 資料夾 將hugo code 轉成靜態網頁 1 2 3 4 git submodule add -b main https://github.com/skysora/skysora.github.io.git public hugo -t hugo-theme-stack 將靜態網頁部署上去 1 2 3 4 5 cd public git add -A git commit -m \u0026#34;first commit\u0026#34; — Creating a Blog with Hugo and Github in 10 minutes1\nhttps://www.youtube.com/watch?v=LIFvgrRxdt4\u0026#160;\u0026#x21a9;\u0026#xfe0e;\n","date":"2023-09-21T00:00:00Z","image":"http://skysora.github.io/post/1/cover_hud7e36f7e20e71be184458283bdae4646_55974_120x120_fill_q75_box_smart1.jpg","permalink":"http://skysora.github.io/post/1/","title":"[Web] Hugo+Github server"}]